{"ast":null,"code":"import _slicedToArray from\"/Users/h_sato/Desktop/Best_Day_in_Japan/BestDayinJapan_front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// src/components/TouristPage.js\nimport React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function TouristPage(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),meetingLocation=_useState2[0],setMeetingLocation=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),destination=_useState4[0],setDestination=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),startTime=_useState6[0],setStartTime=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),endTime=_useState8[0],setEndTime=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),guestCount=_useState10[0],setGuestCount=_useState10[1];var _useState11=useState(''),_useState12=_slicedToArray(_useState11,2),hourlyRate=_useState12[0],setHourlyRate=_useState12[1];var _useState13=useState(''),_useState14=_slicedToArray(_useState13,2),paymentMethod=_useState14[0],setPaymentMethod=_useState14[1];var _useState15=useState(''),_useState16=_slicedToArray(_useState15,2),requestText=_useState16[0],setRequestText=_useState16[1];// 以下、各情報の入力フィールドと保存用のstate更新関数を作成する\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u89B3\\u5149\\u60C5\\u5831\\u5165\\u529B\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"\\u5F85\\u3061\\u5408\\u308F\\u305B\\u5834\\u6240\\uFF08Google\\u30DE\\u30C3\\u30D7\\u304C\\u8868\\u793A\\u3055\\u308C\\u308B\\u4E88\\u5B9A\\u306E\\u5834\\u6240\\uFF09\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:meetingLocation,onChange:function onChange(e){return setMeetingLocation(e.target.value);}})]}),/*#__PURE__*/_jsx(\"button\",{children:\"\\u60C5\\u5831\\u3092\\u4FDD\\u5B58\"})]});}export default TouristPage;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","TouristPage","_useState","_useState2","_slicedToArray","meetingLocation","setMeetingLocation","_useState3","_useState4","destination","setDestination","_useState5","_useState6","startTime","setStartTime","_useState7","_useState8","endTime","setEndTime","_useState9","_useState10","guestCount","setGuestCount","_useState11","_useState12","hourlyRate","setHourlyRate","_useState13","_useState14","paymentMethod","setPaymentMethod","_useState15","_useState16","requestText","setRequestText","children","type","value","onChange","e","target"],"sources":["/Users/h_sato/Desktop/Best_Day_in_Japan/BestDayinJapan_front/src/components/TouristPage.js"],"sourcesContent":["// src/components/TouristPage.js\nimport React, { useState } from 'react';\n\nfunction TouristPage() {\n  const [meetingLocation, setMeetingLocation] = useState('');\n  const [destination, setDestination] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  const [guestCount, setGuestCount] = useState('');\n  const [hourlyRate, setHourlyRate] = useState('');\n  const [paymentMethod, setPaymentMethod] = useState('');\n  const [requestText, setRequestText] = useState('');\n\n  // 以下、各情報の入力フィールドと保存用のstate更新関数を作成する\n\n  return (\n    <div>\n      <h3>観光情報入力</h3>\n      <div>\n        <label>待ち合わせ場所（Googleマップが表示される予定の場所）</label>\n        <input\n          type=\"text\"\n          value={meetingLocation}\n          onChange={(e) => setMeetingLocation(e.target.value)}\n        />\n      </div>\n      {/* 各情報の入力フィールドを追加 */}\n      \n      <button>情報を保存</button>\n    </div>\n  );\n}\n\nexport default TouristPage;\n"],"mappings":"kJAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAExC,QAAS,CAAAC,WAAWA,CAAA,CAAG,CACrB,IAAAC,SAAA,CAA8CN,QAAQ,CAAC,EAAE,CAAC,CAAAO,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAnDG,eAAe,CAAAF,UAAA,IAAEG,kBAAkB,CAAAH,UAAA,IAC1C,IAAAI,UAAA,CAAsCX,QAAQ,CAAC,EAAE,CAAC,CAAAY,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA3CE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAClC,IAAAG,UAAA,CAAkCf,QAAQ,CAAC,EAAE,CAAC,CAAAgB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAAvCE,SAAS,CAAAD,UAAA,IAAEE,YAAY,CAAAF,UAAA,IAC9B,IAAAG,UAAA,CAA8BnB,QAAQ,CAAC,EAAE,CAAC,CAAAoB,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAAnCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAC1B,IAAAG,UAAA,CAAoCvB,QAAQ,CAAC,EAAE,CAAC,CAAAwB,WAAA,CAAAhB,cAAA,CAAAe,UAAA,IAAzCE,UAAU,CAAAD,WAAA,IAAEE,aAAa,CAAAF,WAAA,IAChC,IAAAG,WAAA,CAAoC3B,QAAQ,CAAC,EAAE,CAAC,CAAA4B,WAAA,CAAApB,cAAA,CAAAmB,WAAA,IAAzCE,UAAU,CAAAD,WAAA,IAAEE,aAAa,CAAAF,WAAA,IAChC,IAAAG,WAAA,CAA0C/B,QAAQ,CAAC,EAAE,CAAC,CAAAgC,WAAA,CAAAxB,cAAA,CAAAuB,WAAA,IAA/CE,aAAa,CAAAD,WAAA,IAAEE,gBAAgB,CAAAF,WAAA,IACtC,IAAAG,WAAA,CAAsCnC,QAAQ,CAAC,EAAE,CAAC,CAAAoC,WAAA,CAAA5B,cAAA,CAAA2B,WAAA,IAA3CE,WAAW,CAAAD,WAAA,IAAEE,cAAc,CAAAF,WAAA,IAElC;AAEA,mBACEhC,KAAA,QAAAmC,QAAA,eACErC,IAAA,OAAAqC,QAAA,CAAI,sCAAM,CAAI,CAAC,cACfnC,KAAA,QAAAmC,QAAA,eACErC,IAAA,UAAAqC,QAAA,CAAO,kJAA6B,CAAO,CAAC,cAC5CrC,IAAA,UACEsC,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEhC,eAAgB,CACvBiC,QAAQ,CAAE,SAAAA,SAACC,CAAC,QAAK,CAAAjC,kBAAkB,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC,EAAC,CACrD,CAAC,EACC,CAAC,cAGNvC,IAAA,WAAAqC,QAAA,CAAQ,gCAAK,CAAQ,CAAC,EACnB,CAAC,CAEV,CAEA,cAAe,CAAAlC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}